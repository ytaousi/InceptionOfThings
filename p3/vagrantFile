$initScriptS = <<-SCRIPT
    apt update
    apt upgrade -y
    for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
    sudo apt-get install ca-certificates curl gnupg
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg
    sudo echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    sudo apt update
    sudo apt install docker-ce docker-ce-cli containerd.io -y
    sudo usermod -aG docker vagrant

    sudo curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    sudo chmod 700 get_helm.sh
    sudo ./get_helm.sh

    curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
    
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    sudo chown -R $USER $HOME/.kube
    
    k3d cluster create test 

    sudo kubectl create namespace argocd
    sudo kubectl create namespace dev
    sudo kubectl apply -f /vagrant/shared/traefik.yaml --namespace=kube-system
    sudo kubectl apply -f /vagrant/shared/deployments.yaml -n dev
    sudo kubectl apply -f /vagrant/shared/services.yaml -n dev
    sudo kubectl apply -f /vagrant/shared/traefik-ingress.yaml -n dev

    SCRIPT

Vagrant.configure("2") do |config|
    config.vm.box = "bento/ubuntu-16.04"
    config.vm.define "ytaousiS" do |master|
        master.vm.hostname = "ytaousiS"
        master.vm.network "private_network", ip: "192.168.56.110"
        master.vm.provider "virtualbox" do |v|
            v.name = "ytaousiS"
            v.customize ["modifyvm", :id, "--memory", "1024"]
            v.customize ["modifyvm", :id, "--cpus", "1"]
            v.customize ["modifyvm", :id, "--name", "ytaousiS"]
        end
        
        master.vm.provision "shell", inline:$initScriptS
    end
end